{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoModal","todos","resetTodoId","selectTodoId","useState","user","setUser","currentTodo","find","todoForModal","id","currentUserId","userId","useEffect","userFromServer","type","onClick","title","completed","href","name","TodoList","selectTodo","map","todo","classNames","TodoFilter","selectEl","selectedTodos","query","resetQuery","filter","value","onChange","placeholder","style","pointerEvents","length","App","setTodos","todoId","setTodoId","setQuery","certainTypeTodos","setCertainTypeTodos","handlSelectedTodos","event","a","target","handleSetQuery","toLowerCase","handleUserIdBtn","userIdFromTodo","visibleTodos","includes","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ec597ea.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[],\n  resetTodoId: () => void,\n  selectTodoId: number,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  resetTodoId,\n  selectTodoId,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  const currentTodo = todos.find(\n    todoForModal => todoForModal.id === selectTodoId,\n  );\n  const currentUserId = currentTodo?.userId || 0;\n\n  useEffect(() => {\n    getUser(currentUserId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [currentUserId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetTodoId}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal/TodoModal';\n\ntype Props = {\n  todos: Todo[],\n  resetTodoId: () => void,\n  selectTodo: (userIdFromTodo: number) => Promise<void>,\n  selectTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  resetTodoId,\n  selectTodo,\n  selectTodoId,\n}) => {\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo) => (\n            <tr data-cy=\"todo\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              <td className=\"is-vcentered\">\n                {todo.completed ? (\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" data-cy=\"iconCompleted\" />\n                  </span>\n                ) : (\n                  <span className=\"icon\">\n                    &#10006;\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  'TodoList__item',\n                  {\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  },\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                {selectTodoId === todo.id ? (\n                  <button\n                    onClick={() => {\n                      selectTodo(0);\n                    }}\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => {\n                      selectTodo(todo.id);\n                    }}\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {selectTodoId !== 0 && (\n        <TodoModal\n          todos={todos}\n          resetTodoId={resetTodoId}\n          selectTodoId={selectTodoId}\n        />\n      )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ntype Props = {\n  selectEl: string,\n  selectedTodos: (event: { target: { value: string }; }) => Promise<void>,\n  query: string,\n  resetQuery: () => void,\n  filter: (event: { target: { value: string }; }) => Promise<void>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectEl,\n  selectedTodos,\n  query,\n  resetQuery,\n  filter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={selectEl}\n            onChange={selectedTodos}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"query\"\n          value={query}\n          onChange={filter}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0 && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n\n  /* ---------For TodoFilter--------------- */\n  const [query, setQuery] = useState('');\n  const [certainTypeTodos, setCertainTypeTodos] = useState('all');\n\n  const handlSelectedTodos = async (event: { target: { value: string; }; }) => {\n    setCertainTypeTodos(event.target.value);\n  };\n\n  const handleSetQuery = async (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleUserIdBtn = async (userIdFromTodo: number) => {\n    setTodoId(userIdFromTodo);\n  };\n\n  const selectedBy = todos.filter((todo: Todo) => {\n    switch (certainTypeTodos) {\n      case 'all':\n        return todo;\n      case 'active':\n        return todo.completed === false;\n      case 'completed':\n        return todo.completed === true;\n      default:\n        return todo;\n    }\n  });\n\n  const visibleTodos = selectedBy.filter((todo) => {\n    return todo.title.toLowerCase().includes(query);\n  });\n\n  const resetQuery = async () => {\n    setQuery('');\n  };\n\n  const resetTodoId = async () => {\n    setTodoId(0);\n  };\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectEl={certainTypeTodos}\n                selectedTodos={handlSelectedTodos}\n                query={query}\n                resetQuery={resetQuery}\n                filter={handleSetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  resetTodoId={resetTodoId}\n                  selectTodoId={todoId}\n                  selectTodo={handleUserIdBtn}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}